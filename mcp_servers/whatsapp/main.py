# generated by fastapi-codegen:
#   filename:  openapi.json
#   timestamp: 2025-04-10T13:58:02+00:00



import argparse
import os
from typing import *
from typing import Optional, Union

from autogen.mcp.mcp_proxy import MCPProxy
from autogen.mcp.mcp_proxy.security import (
    APIKeyHeader,
    BaseSecurity,
    HTTPBasic,
    UnsuportedSecurityStub,
)
from fastapi import Path, Query
from pydantic import conint, constr

from models import (
    A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException,
    Ab7498b77a5058e37557279988a806092938b5b30ecbfd39229d94cbcf4bdc07IdentityConfirmation,
    Ab7498b77a5058e37557279988a806092938b5b30ecbfd39229d94cbcf4bdc07IdentityInfo,
    Category4,
    D787c8758e54290e2bc82a005b86f9050517ec4ab2e17f0a4cc0942f51132c33ApiError,
    D787c8758e54290e2bc82a005b86f9050517ec4ab2e17f0a4cc0942f51132c33ConversionEventRequest,
    F7a48ff9966e7ac9fef5292e0b74f7ccc796492cacffd985bfded901992c414bTemplateApiResponse,
    F7a48ff9966e7ac9fef5292e0b74f7ccc796492cacffd985bfded901992c414bTemplateEditPublicApiRequest,
    F7a48ff9966e7ac9fef5292e0b74f7ccc796492cacffd985bfded901992c414bTemplatePublicApiRequest,
    F7a48ff9966e7ac9fef5292e0b74f7ccc796492cacffd985bfded901992c414bTemplatesApiResponse,
    F9ccb6cb799d6a02d85ff0940902b67433383f1a3c972733a815fa9a18d16beaApiError,
    F9ccb6cb799d6a02d85ff0940902b67433383f1a3c972733a815fa9a18d16beaTemplatesApiResponsePaginated,
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2AudioMessage,
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2BulkMessage,
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2BulkMessageInfo,
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2ContactsMessage,
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2DocumentMessage,
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2ImageMessage,
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2InteractiveButtonsMessage,
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2InteractiveFlowMessage,
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2InteractiveListMessage,
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2InteractiveLocationRequestMessage,
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2InteractiveMultiProductMessage,
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2InteractiveOrderDetailsMessage,
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2InteractiveOrderStatusMessage,
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2InteractiveProductMessage,
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2InteractiveUrlButtonMessage,
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2LocationMessage,
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2StickerMessage,
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2TextMessage,
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2VideoMessage,
    Field01b456ee89723218fe6e9044f9e602d2dda7aa7bf5bc0607681dd5bae7f811b9ApiException,
    Field2d9ba0ce97cbc02fae57e41d1bc0e149a861cca6355f94de8d80841221b66e06ApiException,
    Field3c57fc8acf96933d1896c672a41450fccb946974464fd5e3ce94ed2b207c06afPayment,
    Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980ApiError,
    Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980BusinessInfoRequest,
    Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980BusinessInfoResponse,
    Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980WhatsAppSenderQualityResponse,
    Field8cb345d2b2e2a0cd5a7383bf2012768938eaa465c6e4f6554958ac7f4a58aa3fV1TemplatePublicApiRequest,
    Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException,
    Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19AddFlowJsonResponse,
    Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError,
    Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19CreateFlowRequest,
    Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19FlowDataResponse,
    Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19FlowPreview,
    Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19GetFlowJsonResponse,
    Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19GetSenderFlowsResponse,
    Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19UpdateFlowRequest,
    Field18564d7c4791a7efa60d2b6c8cb85f3f93b60abdd39e67aaeb1d653e4aff3ecdV1TemplateApiResponse,
    Field18564d7c4791a7efa60d2b6c8cb85f3f93b60abdd39e67aaeb1d653e4aff3ecdV1TemplatesApiResponse,
    Field30350ea3b42c85fe379e7561e2b43510ecd150d18a85f55710d4f6347f698f75OtpRequest,
    Field30350ea3b42c85fe379e7561e2b43510ecd150d18a85f55710d4f6347f698f75PhoneNumberRequest,
    Field30350ea3b42c85fe379e7561e2b43510ecd150d18a85f55710d4f6347f698f75VerifyCodeRequest,
    Field30350ea3b42c85fe379e7561e2b43510ecd150d18a85f55710d4f6347f698f75WhatsAppSenderRegistrationResponse,
    Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException,
    Field43838506232bad6c43fa70e5764e200c02c98fad735eeaad33d3b47abc8da5d2MarkAsReadErrorResponse,
    Field43838506232bad6c43fa70e5764e200c02c98fad735eeaad33d3b47abc8da5d2UrlDeletionRequest,
    Language,
    Sender,
    Senders,
    Status2,
)

app = MCPProxy(
    title='Infobip OpenAPI Specification',
    description='OpenAPI Specification that contains all public endpoints and webhooks.',
    contact={'name': 'Infobip support', 'email': 'support@infobip.com'},
    version='2.0.656',
    servers=[{'url': 'http://127.0.0.1:8000/'}],
)


@app.post(
    '/whatsapp/1/conversions',
    response_model=None,
    description="""Submit WhatsApp conversion events. Events are indivisible, either all are submitted or none.""",
    responses={
        '400': {
            'model': D787c8758e54290e2bc82a005b86f9050517ec4ab2e17f0a4cc0942f51132c33ApiError
        },
        '401': {
            'model': D787c8758e54290e2bc82a005b86f9050517ec4ab2e17f0a4cc0942f51132c33ApiError
        },
        '403': {
            'model': D787c8758e54290e2bc82a005b86f9050517ec4ab2e17f0a4cc0942f51132c33ApiError
        },
        '429': {
            'model': D787c8758e54290e2bc82a005b86f9050517ec4ab2e17f0a4cc0942f51132c33ApiError
        },
        '500': {
            'model': D787c8758e54290e2bc82a005b86f9050517ec4ab2e17f0a4cc0942f51132c33ApiError
        },
    },
    tags=['channels', 'whatsapp', 'whatsapp-ad-conversions'],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def submit_whatsapp_conversions(
    body: D787c8758e54290e2bc82a005b86f9050517ec4ab2e17f0a4cc0942f51132c33ConversionEventRequest,
) -> Optional[D787c8758e54290e2bc82a005b86f9050517ec4ab2e17f0a4cc0942f51132c33ApiError]:
    """
    Submit conversions
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/embedded-signup/registrations/business-account/{businessAccountId}/senders',
    response_model=None,
    description="""Add a WhatsApp sender to your WhatsApp Business Account and initiate the verification process. If the sender is recognized as already verified, it will be automatically submitted for registration.""",
    responses={
        '202': {
            'model': Field30350ea3b42c85fe379e7561e2b43510ecd150d18a85f55710d4f6347f698f75WhatsAppSenderRegistrationResponse
        },
        '400': {
            'model': Field2d9ba0ce97cbc02fae57e41d1bc0e149a861cca6355f94de8d80841221b66e06ApiException
        },
        '401': {
            'model': Field2d9ba0ce97cbc02fae57e41d1bc0e149a861cca6355f94de8d80841221b66e06ApiException
        },
        '403': {
            'model': Field2d9ba0ce97cbc02fae57e41d1bc0e149a861cca6355f94de8d80841221b66e06ApiException
        },
        '404': {
            'model': Field2d9ba0ce97cbc02fae57e41d1bc0e149a861cca6355f94de8d80841221b66e06ApiException
        },
        '429': {
            'model': Field2d9ba0ce97cbc02fae57e41d1bc0e149a861cca6355f94de8d80841221b66e06ApiException
        },
        '500': {
            'model': Field2d9ba0ce97cbc02fae57e41d1bc0e149a861cca6355f94de8d80841221b66e06ApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-bulk-sender-registration',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def add_whatsapp_sender(
    business_account_id: Annotated[int, """WhatsApp Business Account Id."""] = Path(
        ..., alias='businessAccountId'
    ),
    body: Field30350ea3b42c85fe379e7561e2b43510ecd150d18a85f55710d4f6347f698f75PhoneNumberRequest = ...,
) -> Optional[
    Union[
        Field30350ea3b42c85fe379e7561e2b43510ecd150d18a85f55710d4f6347f698f75WhatsAppSenderRegistrationResponse,
        Field2d9ba0ce97cbc02fae57e41d1bc0e149a861cca6355f94de8d80841221b66e06ApiException,
    ]
]:
    """
    Add WhatsApp sender
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.put(
    '/whatsapp/1/embedded-signup/registrations/senders/{sender}/verification',
    response_model=None,
    description="""Retry the WhatsApp sender verification process in the event of a non-delivered verification code.""",
    responses={
        '400': {
            'model': Field2d9ba0ce97cbc02fae57e41d1bc0e149a861cca6355f94de8d80841221b66e06ApiException
        },
        '401': {
            'model': Field2d9ba0ce97cbc02fae57e41d1bc0e149a861cca6355f94de8d80841221b66e06ApiException
        },
        '403': {
            'model': Field2d9ba0ce97cbc02fae57e41d1bc0e149a861cca6355f94de8d80841221b66e06ApiException
        },
        '404': {
            'model': Field2d9ba0ce97cbc02fae57e41d1bc0e149a861cca6355f94de8d80841221b66e06ApiException
        },
        '429': {
            'model': Field2d9ba0ce97cbc02fae57e41d1bc0e149a861cca6355f94de8d80841221b66e06ApiException
        },
        '500': {
            'model': Field2d9ba0ce97cbc02fae57e41d1bc0e149a861cca6355f94de8d80841221b66e06ApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-bulk-sender-registration',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def retry_whatsapp_sender_verification(
    sender: Annotated[
        constr(pattern=r'\d+'),
        """WhatsApp sender number. Must be in international format.""",
    ],
    body: Field30350ea3b42c85fe379e7561e2b43510ecd150d18a85f55710d4f6347f698f75OtpRequest = ...,
) -> Optional[
    Field2d9ba0ce97cbc02fae57e41d1bc0e149a861cca6355f94de8d80841221b66e06ApiException
]:
    """
    Retry WhatsApp sender verification
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/embedded-signup/registrations/senders/{sender}/verification',
    response_model=None,
    description="""Verify your WhatsApp sender and submit it for registration.""",
    responses={
        '400': {
            'model': Field2d9ba0ce97cbc02fae57e41d1bc0e149a861cca6355f94de8d80841221b66e06ApiException
        },
        '401': {
            'model': Field2d9ba0ce97cbc02fae57e41d1bc0e149a861cca6355f94de8d80841221b66e06ApiException
        },
        '403': {
            'model': Field2d9ba0ce97cbc02fae57e41d1bc0e149a861cca6355f94de8d80841221b66e06ApiException
        },
        '404': {
            'model': Field2d9ba0ce97cbc02fae57e41d1bc0e149a861cca6355f94de8d80841221b66e06ApiException
        },
        '429': {
            'model': Field2d9ba0ce97cbc02fae57e41d1bc0e149a861cca6355f94de8d80841221b66e06ApiException
        },
        '500': {
            'model': Field2d9ba0ce97cbc02fae57e41d1bc0e149a861cca6355f94de8d80841221b66e06ApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-bulk-sender-registration',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def verify_whatsapp_sender(
    sender: Annotated[
        constr(pattern=r'\d+'),
        """WhatsApp sender number. Must be in international format.""",
    ],
    body: Field30350ea3b42c85fe379e7561e2b43510ecd150d18a85f55710d4f6347f698f75VerifyCodeRequest = ...,
) -> Optional[
    Field2d9ba0ce97cbc02fae57e41d1bc0e149a861cca6355f94de8d80841221b66e06ApiException
]:
    """
    Verify WhatsApp sender
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/message/audio',
    response_model=F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    description="""Send an audio to a single recipient. Audio messages can only be successfully delivered if the recipient has contacted the business within the last 24 hours, otherwise [template message](#channels/whatsapp/send-whatsapp-template-message) should be used. <br/> The API response will not contain the final delivery status, use [Delivery Reports](#channels/whatsapp/receive-whatsapp-delivery-reports) instead.""",
    responses={
        '400': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '401': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '403': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '429': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '500': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-outbound-messages',
        'whatsapp-text-and-media-messages',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def send_whatsapp_audio_message(
    body: F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2AudioMessage,
) -> Union[
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException,
]:
    """
    Send WhatsApp audio message
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/message/contact',
    response_model=F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    description="""Send a contact to a single recipient. Contact messages can only be successfully delivered if the recipient has contacted the business within the last 24 hours, otherwise [template message](#channels/whatsapp/send-whatsapp-template-message) should be used. <br/> The API response will not contain the final delivery status, use [Delivery Reports](#channels/whatsapp/receive-whatsapp-delivery-reports) instead.""",
    responses={
        '400': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '401': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '403': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '429': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '500': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-outbound-messages',
        'whatsapp-text-and-media-messages',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def send_whatsapp_contact_message(
    body: F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2ContactsMessage,
) -> Union[
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException,
]:
    """
    Send WhatsApp contact message
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/message/document',
    response_model=F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    description="""Send a document to a single recipient. Document messages can only be successfully delivered if the recipient has contacted the business within the last 24 hours, otherwise [template message](#channels/whatsapp/send-whatsapp-template-message) should be used. <br/> The API response will not contain the final delivery status, use [Delivery Reports](#channels/whatsapp/receive-whatsapp-delivery-reports) instead.""",
    responses={
        '400': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '401': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '403': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '429': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '500': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-outbound-messages',
        'whatsapp-text-and-media-messages',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def send_whatsapp_document_message(
    body: F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2DocumentMessage,
) -> Union[
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException,
]:
    """
    Send WhatsApp document message
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/message/image',
    response_model=F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    description="""Send an image to a single recipient. Image messages can only be successfully delivered if the recipient has contacted the business within the last 24 hours, otherwise [template message](#channels/whatsapp/send-whatsapp-template-message) should be used. <br/> The API response will not contain the final delivery status, use [Delivery Reports](#channels/whatsapp/receive-whatsapp-delivery-reports) instead.""",
    responses={
        '400': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '401': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '403': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '429': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '500': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-outbound-messages',
        'whatsapp-text-and-media-messages',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def send_whatsapp_image_message(
    body: F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2ImageMessage,
) -> Union[
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException,
]:
    """
    Send WhatsApp image message
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/message/interactive/buttons',
    response_model=F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    description="""Send an interactive buttons message to a single recipient. Interactive buttons messages can only be successfully delivered if the recipient has contacted the business within the last 24 hours, otherwise [template message](#channels/whatsapp/send-whatsapp-template-message) should be used. <br/> The API response will not contain the final delivery status, use [Delivery Reports](#channels/whatsapp/receive-whatsapp-delivery-reports) instead.""",
    responses={
        '400': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '401': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '403': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '429': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '500': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-outbound-messages',
        'send-whatsapp-interactive-messages',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def send_whatsapp_interactive_buttons_message(
    body: F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2InteractiveButtonsMessage,
) -> Union[
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException,
]:
    """
    Send WhatsApp interactive buttons message
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/message/interactive/flow',
    response_model=F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    description="""Send an interactive flow message to a single recipient. Interactive flow messages can only be successfully delivered if the recipient has contacted the business within the last 24 hours, otherwise [template message](#channels/whatsapp/send-whatsapp-template-message) should be used. <br/> The API response will not contain the final delivery status, use [Delivery Reports](#channels/whatsapp/receive-whatsapp-delivery-reports) instead.""",
    responses={
        '400': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '401': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '403': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '429': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '500': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-outbound-messages',
        'send-whatsapp-interactive-messages',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def send_whatsapp_interactive_flow_message(
    body: F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2InteractiveFlowMessage,
) -> Union[
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException,
]:
    """
    Send WhatsApp interactive flow message
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/message/interactive/list',
    response_model=F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    description="""Send an interactive list message to a single recipient. Interactive list messages can only be successfully delivered if the recipient has contacted the business within the last 24 hours, otherwise [template message](#channels/whatsapp/send-whatsapp-template-message) should be used. <br/> The API response will not contain the final delivery status, use [Delivery Reports](#channels/whatsapp/receive-whatsapp-delivery-reports) instead.""",
    responses={
        '400': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '401': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '403': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '429': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '500': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-outbound-messages',
        'send-whatsapp-interactive-messages',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def send_whatsapp_interactive_list_message(
    body: F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2InteractiveListMessage,
) -> Union[
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException,
]:
    """
    Send WhatsApp interactive list message
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/message/interactive/location-request',
    response_model=F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    description="""Send an interactive location request message to a single recipient. Interactive location request messages can only be successfully delivered if the recipient has contacted the business within the last 24 hours, otherwise [template message](#channels/whatsapp/send-whatsapp-template-message) should be used. <br/> The API response will not contain the final delivery status, use [Delivery Reports](#channels/whatsapp/receive-whatsapp-delivery-reports) instead.""",
    responses={
        '400': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '401': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '403': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '429': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '500': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-outbound-messages',
        'send-whatsapp-interactive-messages',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def send_whatsapp_interactive_location_request_message(
    body: F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2InteractiveLocationRequestMessage,
) -> Union[
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException,
]:
    """
    Send WhatsApp interactive location request message
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/message/interactive/multi-product',
    response_model=F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    description="""Send an interactive multi-product message to a single recipient. Interactive multi-product messages can only be successfully delivered if the recipient has contacted the business within the last 24 hours, otherwise [template message](#channels/whatsapp/send-whatsapp-template-message) should be used. <br/> The API response will not contain the final delivery status, use [Delivery Reports](#channels/whatsapp/receive-whatsapp-delivery-reports) instead.""",
    responses={
        '400': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '401': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '403': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '429': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '500': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-outbound-messages',
        'send-whatsapp-interactive-messages',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def send_whatsapp_interactive_multi_product_message(
    body: F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2InteractiveMultiProductMessage,
) -> Union[
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException,
]:
    """
    Send WhatsApp interactive multi-product message
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/message/interactive/order-details',
    response_model=F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    description="""Send an interactive order-details message to a single recipient. <br/> An order-details message is a structured message containing essential information about the customer's selected products. Alternatively, a [single](#channels/whatsapp/send-whatsapp-interactive-product-message) or [multi-product](#channels/whatsapp/send-whatsapp-interactive-multi-product-message) interactive message can serve this purpose. <br/> Interactive order-details messages can only be successfully delivered if the recipient has contacted the business within the last 24 hours, otherwise [template message](#channels/whatsapp/send-whatsapp-template-message) should be used. <br/> The API response will not contain the final delivery status, use [Delivery Reports](#channels/whatsapp/receive-whatsapp-delivery-reports) instead.""",
    responses={
        '400': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '401': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '403': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '429': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '500': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-outbound-messages',
        'send-whatsapp-interactive-messages',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def send_whatsapp_interactive_order_details_message(
    body: F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2InteractiveOrderDetailsMessage,
) -> Union[
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException,
]:
    """
    Send WhatsApp interactive order-details message
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/message/interactive/order-status',
    response_model=F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    description="""Send an interactive order-status message to a single recipient. <br/> An order-status message delivers real-time updates to customers about the current status of their order. <br/> Interactive order-status messages can only be successfully delivered if the recipient has contacted the business within the last 24 hours, otherwise [template message](#channels/whatsapp/send-whatsapp-template-message) should be used. <br/> The API response will not contain the final delivery status, use [Delivery Reports](#channels/whatsapp/receive-whatsapp-delivery-reports) instead.""",
    responses={
        '400': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '401': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '403': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '429': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '500': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-outbound-messages',
        'send-whatsapp-interactive-messages',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def send_whatsapp_interactive_order_status_message(
    body: F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2InteractiveOrderStatusMessage,
) -> Union[
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException,
]:
    """
    Send WhatsApp interactive order-status message
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/message/interactive/product',
    response_model=F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    description="""Send an interactive product message to a single recipient. Interactive product messages can only be successfully delivered if the recipient has contacted the business within the last 24 hours, otherwise [template message](#channels/whatsapp/send-whatsapp-template-message) should be used. <br/> The API response will not contain the final delivery status, use [Delivery Reports](#channels/whatsapp/receive-whatsapp-delivery-reports) instead.""",
    responses={
        '400': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '401': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '403': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '429': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '500': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-outbound-messages',
        'send-whatsapp-interactive-messages',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def send_whatsapp_interactive_product_message(
    body: F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2InteractiveProductMessage,
) -> Union[
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException,
]:
    """
    Send WhatsApp interactive product message
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/message/interactive/url-button',
    response_model=F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    description="""Send an interactive url button message to a single recipient.""",
    responses={
        '400': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '401': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '403': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '429': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '500': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-outbound-messages',
        'send-whatsapp-interactive-messages',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def send_whatsapp_interactive_url_button_message(
    body: F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2InteractiveUrlButtonMessage,
) -> Union[
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException,
]:
    """
    Send WhatsApp interactive url button message
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/message/location',
    response_model=F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    description="""Send a location to a single recipient. Location messages can only be successfully delivered if the recipient has contacted the business within the last 24 hours, otherwise [template message](#channels/whatsapp/send-whatsapp-template-message) should be used. <br/> The API response will not contain the final delivery status, use [Delivery Reports](#channels/whatsapp/receive-whatsapp-delivery-reports) instead.""",
    responses={
        '400': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '401': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '403': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '429': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '500': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-outbound-messages',
        'whatsapp-text-and-media-messages',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def send_whatsapp_location_message(
    body: F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2LocationMessage,
) -> Union[
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException,
]:
    """
    Send WhatsApp location message
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/message/sticker',
    response_model=F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    description="""Send a sticker to a single recipient. Sticker messages can only be successfully delivered if the recipient has contacted the business within the last 24 hours, otherwise [template message](#channels/whatsapp/send-whatsapp-template-message) should be used. <br/> The API response will not contain the final delivery status, use [Delivery Reports](#channels/whatsapp/receive-whatsapp-delivery-reports) instead.""",
    responses={
        '400': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '401': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '403': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '429': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '500': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-outbound-messages',
        'whatsapp-text-and-media-messages',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def send_whatsapp_sticker_message(
    body: F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2StickerMessage,
) -> Union[
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException,
]:
    """
    Send WhatsApp sticker message
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/message/template',
    response_model=F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2BulkMessageInfo,
    description="""Send a single or multiple template messages to one or more recipients. Template messages can be sent and delivered at anytime. Each template needs to be registered and pre-approved by WhatsApp. <br/> The API response will not contain the final delivery status, use [Delivery Reports](#channels/whatsapp/receive-whatsapp-delivery-reports) instead.""",
    responses={
        '400': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '401': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '403': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '429': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '500': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-outbound-messages',
        'whatsapp-template-message',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def send_whatsapp_template_message(
    body: F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2BulkMessage,
) -> Union[
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2BulkMessageInfo,
    A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException,
]:
    """
    Send WhatsApp template message
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/message/text',
    response_model=F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    description="""Send a text message to a single recipient. Text messages can only be successfully delivered if the recipient has contacted the business within the last 24 hours, otherwise [template message](#channels/whatsapp/send-whatsapp-template-message) should be used. <br/> The API response will not contain the final delivery status, use [Delivery Reports](#channels/whatsapp/receive-whatsapp-delivery-reports) instead.""",
    responses={
        '400': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '401': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '403': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '429': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '500': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-outbound-messages',
        'whatsapp-text-and-media-messages',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def send_whatsapp_text_message(
    body: F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2TextMessage,
) -> Union[
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException,
]:
    """
    Send WhatsApp text message
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/message/video',
    response_model=F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    description="""Send a video to a single recipient. Video messages can only be successfully delivered if the recipient has contacted the business within the last 24 hours, otherwise [template message](#channels/whatsapp/send-whatsapp-template-message) should be used. <br/> The API response will not contain the final delivery status, use [Delivery Reports](#channels/whatsapp/receive-whatsapp-delivery-reports) instead.""",
    responses={
        '400': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '401': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '403': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '429': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
        '500': {
            'model': A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-outbound-messages',
        'whatsapp-text-and-media-messages',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def send_whatsapp_video_message(
    body: F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2VideoMessage,
) -> Union[
    F30d78c250ad1209aef755ddde02bb131e1749b705985f0e9f1b007c900b98e2SingleMessageInfo,
    A0adf300db6deef82e7c0136cd925a42b10c902181badc6843c98dba155015ccApiException,
]:
    """
    Send WhatsApp video message
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/whatsapp/1/senders/quality',
    response_model=Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980WhatsAppSenderQualityResponse,
    description="""Get WhatsApp sender information, such as quality rating, status, and current limit of given senders. Only senders associated with your account are included in the response.""",
    responses={
        '400': {
            'model': Field01b456ee89723218fe6e9044f9e602d2dda7aa7bf5bc0607681dd5bae7f811b9ApiException
        },
        '401': {
            'model': Field01b456ee89723218fe6e9044f9e602d2dda7aa7bf5bc0607681dd5bae7f811b9ApiException
        },
        '403': {
            'model': Field01b456ee89723218fe6e9044f9e602d2dda7aa7bf5bc0607681dd5bae7f811b9ApiException
        },
        '429': {
            'model': Field01b456ee89723218fe6e9044f9e602d2dda7aa7bf5bc0607681dd5bae7f811b9ApiException
        },
        '500': {
            'model': Field01b456ee89723218fe6e9044f9e602d2dda7aa7bf5bc0607681dd5bae7f811b9ApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-sender-management',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def get_whatsapp_senders_quality(
    senders: Annotated[Senders, """List of comma-separated WhatsApp sender numbers."""],
) -> Union[
    Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980WhatsAppSenderQualityResponse,
    Field01b456ee89723218fe6e9044f9e602d2dda7aa7bf5bc0607681dd5bae7f811b9ApiException,
]:
    """
    Get quality information of WhatsApp senders
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/whatsapp/1/senders/{sender}/business-info',
    response_model=Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980BusinessInfoResponse,
    description="""Get WhatsApp sender business information, such as about, address, description, email, vertical, websites, and display name.""",
    responses={
        '400': {
            'model': Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980ApiError
        },
        '401': {
            'model': Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980ApiError
        },
        '403': {
            'model': Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980ApiError
        },
        '404': {
            'model': Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980ApiError
        },
        '429': {
            'model': Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980ApiError
        },
        '500': {
            'model': Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980ApiError
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-sender-management',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def get_whatsapp_sender_business_info(
    sender: Annotated[
        constr(pattern=r'[0-9]+', min_length=1, max_length=15),
        """Registered WhatsApp sender number. Must be in international format.""",
    ],
) -> Union[
    Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980BusinessInfoResponse,
    Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980ApiError,
]:
    """
    Get business info of WhatsApp sender
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.patch(
    '/whatsapp/1/senders/{sender}/business-info',
    response_model=None,
    description="""Update WhatsApp sender business information, such as about, address, description, email, vertical, websites, and logo.""",
    responses={
        '400': {
            'model': Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980ApiError
        },
        '401': {
            'model': Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980ApiError
        },
        '403': {
            'model': Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980ApiError
        },
        '404': {
            'model': Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980ApiError
        },
        '429': {
            'model': Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980ApiError
        },
        '500': {
            'model': Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980ApiError
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-sender-management',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def update_whatsapp_sender_business_info(
    sender: Annotated[
        constr(pattern=r'[0-9]+', min_length=1, max_length=15),
        """Registered WhatsApp sender number. Must be in international format.""",
    ],
    body: Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980BusinessInfoRequest = ...,
) -> Optional[
    Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980ApiError
]:
    """
    Update business info of WhatsApp sender
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/whatsapp/1/senders/{sender}/business-info/logo',
    response_model=bytes,
    description="""Download WhatsApp sender business logo.""",
    responses={
        '400': {
            'model': Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980ApiError
        },
        '401': {
            'model': Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980ApiError
        },
        '403': {
            'model': Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980ApiError
        },
        '404': {
            'model': Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980ApiError
        },
        '429': {
            'model': Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980ApiError
        },
        '500': {
            'model': Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980ApiError
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-sender-management',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def get_whatsapp_sender_business_logo(
    sender: Annotated[
        constr(pattern=r'[0-9]+', min_length=1, max_length=15),
        """Registered WhatsApp sender number. Must be in international format.""",
    ],
) -> Union[
    bytes, Field6a832d7980b0224fa17e623a753d9dcd3d97aedf6ae653c996ab303ad0c7f980ApiError
]:
    """
    Download business logo of WhatsApp sender
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/whatsapp/1/senders/{sender}/flows',
    response_model=Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19GetSenderFlowsResponse,
    description="""Get all the flows for a given sender.""",
    responses={
        '400': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '401': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '403': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '404': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '429': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '500': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-flow-management',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def get_whatsapp_flows(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
) -> Union[
    Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19GetSenderFlowsResponse,
    Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError,
]:
    """
    Get WhatsApp Flows
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/senders/{sender}/flows',
    response_model=None,
    description="""Create a WhatsApp flow. If successful, flow will be created in DRAFT status with default flow.json. Flow.json contains structure of the flow and other fields given in request can be updated until publication.""",
    responses={
        '201': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19FlowDataResponse
        },
        '400': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '401': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '403': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '404': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '429': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '500': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-flow-management',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def create_whatsapp_flow(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
    body: Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19CreateFlowRequest = ...,
) -> Optional[
    Union[
        Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19FlowDataResponse,
        Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError,
    ]
]:
    """
    Create WhatsApp Flow
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.delete(
    '/whatsapp/1/senders/{sender}/flows/{flowId}',
    response_model=None,
    description="""Delete a WhatsApp flow. Only flows in DRAFT status can be deleted.""",
    responses={
        '400': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '401': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '403': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '404': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '429': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '500': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-flow-management',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def delete_whatsapp_flow(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
    flow_id: Annotated[str, """ID of the flow to be deleted."""] = Path(
        ..., alias='flowId'
    ),
) -> Optional[
    Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
]:
    """
    Delete WhatsApp Flow
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.patch(
    '/whatsapp/1/senders/{sender}/flows/{flowId}',
    response_model=None,
    description="""Update a WhatsApp flow. Only flows in DRAFT status can be modified.""",
    responses={
        '400': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '401': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '403': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '404': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '429': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '500': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-flow-management',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def update_whatsapp_flow(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
    flow_id: Annotated[str, """ID of the flow to be modified."""] = Path(
        ..., alias='flowId'
    ),
    body: Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19UpdateFlowRequest = ...,
) -> Optional[
    Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
]:
    """
    Update WhatsApp Flow
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/senders/{sender}/flows/{flowId}/deprecate',
    response_model=None,
    description="""Deprecate a WhatsApp flow. If successful, flow will change its status to DEPRECATED. From now on flow cannot be sent anymore.""",
    responses={
        '400': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '401': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '403': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '404': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '429': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '500': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-flow-management',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def deprecate_whatsapp_flow(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
    flow_id: Annotated[str, """ID of the flow to be deprecated."""] = Path(
        ..., alias='flowId'
    ),
) -> Optional[
    Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
]:
    """
    Deprecate WhatsApp Flow
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/whatsapp/1/senders/{sender}/flows/{flowId}/json',
    response_model=Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19GetFlowJsonResponse,
    description="""Get the Flow JSON attached to a specified flow.""",
    responses={
        '400': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '401': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '403': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '404': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '429': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '500': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-flow-management',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def get_whatsapp_flow_json(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
    flow_id: Annotated[str, """ID of the flow the JSON is attached to."""] = Path(
        ..., alias='flowId'
    ),
) -> Union[
    Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19GetFlowJsonResponse,
    Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError,
]:
    """
    Get WhatsApp Flow JSON
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.put(
    '/whatsapp/1/senders/{sender}/flows/{flowId}/json',
    response_model=None,
    description="""Add WhatsApp Flow JSON. File created from provided JSON content is sent and validated, errors found are provided in response. Regardless of whether any validation errors are returned, the Flow JSON is loaded on the Meta side and the request is considered successful. The maximum size of created file is 10MB. More information about JSON structure can be found under Meta documentation: https://developers.facebook.com/docs/whatsapp/flows/reference/flowjson.""",
    responses={
        '201': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19AddFlowJsonResponse
        },
        '400': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '401': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '403': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '404': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '429': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '500': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-flow-management',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def add_whatsapp_flow_json(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
    flow_id: Annotated[str, """ID of the flow to attach JSON to."""] = Path(
        ..., alias='flowId'
    ),
    body: str = ...,
) -> Optional[
    Union[
        Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19AddFlowJsonResponse,
        Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError,
    ]
]:
    """
    Add WhatsApp Flow JSON
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/whatsapp/1/senders/{sender}/flows/{flowId}/preview',
    response_model=Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19FlowPreview,
    description="""Get flow's preview URL. Link does not require login and will expire in 30 days.""",
    responses={
        '401': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '403': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '404': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '429': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '500': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-flow-management',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def get_whatsapp_flow_preview(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
    flow_id: Annotated[
        str, """ID of the flow for which the preview URL will be generated."""
    ] = Path(..., alias='flowId'),
) -> Union[
    Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19FlowPreview,
    Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError,
]:
    """
    Get WhatsApp Flow's preview
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/senders/{sender}/flows/{flowId}/publish',
    response_model=None,
    description="""Publish a WhatsApp flow. If successful, the flow will change its status to PUBLISHED. From now on the flow cannot be modified.""",
    responses={
        '400': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '401': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '403': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '404': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '429': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
        '500': {
            'model': Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-flow-management',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def publish_whatsapp_flow(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
    flow_id: Annotated[str, """ID of the flow to be published."""] = Path(
        ..., alias='flowId'
    ),
) -> Optional[
    Field0089ea7cf06f0b77e4c88a7276c6f25dd5c0c5bbab819756fc42c548980cae19ApiError
]:
    """
    Publish WhatsApp Flow
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.delete(
    '/whatsapp/1/senders/{sender}/media',
    response_model=None,
    description="""Delete WhatsApp media. May be outbound or inbound media.""",
    responses={
        '400': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '401': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '403': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '429': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '500': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-media-management',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def delete_whatsapp_media(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
    body: Field43838506232bad6c43fa70e5764e200c02c98fad735eeaad33d3b47abc8da5d2UrlDeletionRequest = ...,
) -> Optional[
    Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
]:
    """
    Delete media
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/whatsapp/1/senders/{sender}/media/{mediaId}',
    response_model=bytes,
    description="""Download WhatsApp media sent by end-users.""",
    responses={
        '401': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '403': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '429': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '500': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-inbound-messages',
        'whatsapp-get-inbound-media',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def download_whatsapp_inbound_media(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
    media_id: Annotated[str, """ID of the media."""] = Path(..., alias='mediaId'),
) -> Union[
    bytes,
    Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException,
]:
    """
    Download inbound media
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.head(
    '/whatsapp/1/senders/{sender}/media/{mediaId}',
    response_model=None,
    description="""Get metadata of WhatsApp media sent by end-users to check media type and the size of a file without downloading the content.""",
    responses={
        '401': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '403': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '429': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '500': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-inbound-messages',
        'whatsapp-get-inbound-media',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def get_whatsapp_media_metadata(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
    media_id: Annotated[str, """ID of the media."""] = Path(..., alias='mediaId'),
) -> Optional[
    Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
]:
    """
    Get media metadata
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/senders/{sender}/message/{messageId}/read',
    response_model=None,
    description="""Mark WhatsApp messages sent by end-users as read.""",
    responses={
        '400': {
            'model': Field43838506232bad6c43fa70e5764e200c02c98fad735eeaad33d3b47abc8da5d2MarkAsReadErrorResponse
        },
        '401': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '403': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '404': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '429': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '500': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-inbound-messages',
        'whatsapp-mark-message-as-read',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def mark_whatsapp_message_as_read(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
    message_id: Annotated[str, """ID of the message to be marked as read."""] = Path(
        ..., alias='messageId'
    ),
) -> Optional[
    Union[
        Field43838506232bad6c43fa70e5764e200c02c98fad735eeaad33d3b47abc8da5d2MarkAsReadErrorResponse,
        Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException,
    ]
]:
    """
    Mark as read
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/whatsapp/1/senders/{sender}/payments/br/{paymentId}',
    response_model=Field3c57fc8acf96933d1896c672a41450fccb946974464fd5e3ce94ed2b207c06afPayment,
    description="""Get Brazil payment and transaction status.""",
    responses={
        '400': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '401': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '403': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '429': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '500': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-message-status-reports',
        'whatsapp-payments',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def get_whatsapp_brazil_payment_status(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
    payment_id: Annotated[
        constr(pattern=r'^[A-Za-z0-9\-_.]{1,35}$'),
        """Unique identifier of the payment.""",
    ] = Path(..., alias='paymentId'),
) -> Union[
    Field3c57fc8acf96933d1896c672a41450fccb946974464fd5e3ce94ed2b207c06afPayment,
    Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException,
]:
    """
    Get Brazil payment status
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/whatsapp/1/senders/{sender}/payments/upi/payu/{paymentId}',
    response_model=Field3c57fc8acf96933d1896c672a41450fccb946974464fd5e3ce94ed2b207c06afPayment,
    description="""Get India UPI PayU payment and transaction status.""",
    responses={
        '400': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '401': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '403': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '429': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '500': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-message-status-reports',
        'whatsapp-payments',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def get_whatsapp_upi_payu_payment_status(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
    payment_id: Annotated[
        constr(min_length=1, max_length=25), """Unique identifier of the payment."""
    ] = Path(..., alias='paymentId'),
) -> Union[
    Field3c57fc8acf96933d1896c672a41450fccb946974464fd5e3ce94ed2b207c06afPayment,
    Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException,
]:
    """
    Get India UPI PayU payment status
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/whatsapp/1/senders/{sender}/payments/upi/{paymentId}',
    response_model=Field3c57fc8acf96933d1896c672a41450fccb946974464fd5e3ce94ed2b207c06afPayment,
    description="""Get India UPI PayU/Razor payment and transaction status.""",
    responses={
        '400': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '401': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '403': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '429': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '500': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-message-status-reports',
        'whatsapp-payments',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def get_whatsapp_upi_payment_status(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
    payment_id: Annotated[
        constr(pattern=r'^[A-Za-z0-9\-_.]{1,35}$'),
        """Unique identifier of the payment.""",
    ] = Path(..., alias='paymentId'),
) -> Union[
    Field3c57fc8acf96933d1896c672a41450fccb946974464fd5e3ce94ed2b207c06afPayment,
    Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException,
]:
    """
    Get India UPI PayU/Razorpay payment status
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/whatsapp/1/senders/{sender}/templates',
    response_model=Field18564d7c4791a7efa60d2b6c8cb85f3f93b60abdd39e67aaeb1d653e4aff3ecdV1TemplatesApiResponse,
    description="""Get all the templates and their statuses for a given sender. This version is deprecated as of June 29th 2022, meaning no fixes/updates will be provided and no new parameters will be added. This API will be deleted at the end of the year. Please use the [latest version](#channels/whatsapp/get-whatsapp-templates).""",
    responses={
        '401': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '403': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '404': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '429': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '500': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-template-management',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def deprecated_get_whatsapp_templates(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
) -> Union[
    Field18564d7c4791a7efa60d2b6c8cb85f3f93b60abdd39e67aaeb1d653e4aff3ecdV1TemplatesApiResponse,
    Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException,
]:
    """
    Get WhatsApp Templates
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/1/senders/{sender}/templates',
    response_model=None,
    description="""Create a WhatsApp template. Created template will be submitted for WhatsApp's review and approval. Once approved, template can be sent to end-users. Refer to [template guidelines](https://www.infobip.com/docs/whatsapp/message-types#guidelines-amp-best-practices) for additional info. This version is deprecated as of June 29th 2022, meaning no fixes/updates will be provided and no new parameters will be added. This API will be deleted at the end of the year. Please use the [latest version](#channels/whatsapp/create-whatsapp-template).""",
    responses={
        '201': {
            'model': Field18564d7c4791a7efa60d2b6c8cb85f3f93b60abdd39e67aaeb1d653e4aff3ecdV1TemplateApiResponse
        },
        '400': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '401': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '403': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '404': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '429': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '500': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-template-management',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def deprecated_create_whatsapp_template(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
    body: Field8cb345d2b2e2a0cd5a7383bf2012768938eaa465c6e4f6554958ac7f4a58aa3fV1TemplatePublicApiRequest = ...,
) -> Optional[
    Union[
        Field18564d7c4791a7efa60d2b6c8cb85f3f93b60abdd39e67aaeb1d653e4aff3ecdV1TemplateApiResponse,
        Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException,
    ]
]:
    """
    Create WhatsApp Template
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/whatsapp/1/templates',
    response_model=F9ccb6cb799d6a02d85ff0940902b67433383f1a3c972733a815fa9a18d16beaTemplatesApiResponsePaginated,
    description="""Retrieve all templates associated with your account based on the provided filter criteria.""",
    responses={
        '400': {
            'model': F9ccb6cb799d6a02d85ff0940902b67433383f1a3c972733a815fa9a18d16beaApiError
        },
        '401': {
            'model': F9ccb6cb799d6a02d85ff0940902b67433383f1a3c972733a815fa9a18d16beaApiError
        },
        '403': {
            'model': F9ccb6cb799d6a02d85ff0940902b67433383f1a3c972733a815fa9a18d16beaApiError
        },
        '429': {
            'model': F9ccb6cb799d6a02d85ff0940902b67433383f1a3c972733a815fa9a18d16beaApiError
        },
        '500': {
            'model': F9ccb6cb799d6a02d85ff0940902b67433383f1a3c972733a815fa9a18d16beaApiError
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-template-management',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def get_account_whatsapp_templates(
    sender: Annotated[
        Optional[Sender],
        """List of registered WhatsApp senders numbers separated by comma. Must be in international format.""",
    ] = None,
    status: Annotated[
        Optional[Status2], """List of template statuses, separated by commas."""
    ] = None,
    name: Annotated[Optional[str], """Template name."""] = None,
    language: Annotated[
        Optional[Language],
        """List of languages for the templates, separated by commas.""",
    ] = None,
    category: Annotated[
        Optional[Category4], """List of template categories, separated by commas."""
    ] = None,
    application_id: Annotated[
        Optional[str],
        """Application ID used in outbound send requests. It is also returned in notification events. For more details, refer to the [documentation](https://www.infobip.com/docs/cpaas-x/application-and-entity-management).""",
    ] = Query(None, alias='applicationId'),
    entity_id: Annotated[
        Optional[str],
        """Entity ID used in outbound send requests. It is also returned in notification events. For more details, refer to the [documentation](https://www.infobip.com/docs/cpaas-x/application-and-entity-management).""",
    ] = Query(None, alias='entityId'),
    page: Annotated[Optional[int], """Current page number."""] = 0,
    size: Annotated[
        Optional[conint(ge=1, le=100)], """Number of items per page."""
    ] = 10,
    order_by: Annotated[
        Optional[str],
        """Sorting criteria in the format property,direction. Can be ascending (ASC) or descending (DESC). Available properties: category, language, name, status, templateId""",
    ] = Query('templateId,ASC', alias='orderBy'),
) -> Union[
    F9ccb6cb799d6a02d85ff0940902b67433383f1a3c972733a815fa9a18d16beaTemplatesApiResponsePaginated,
    F9ccb6cb799d6a02d85ff0940902b67433383f1a3c972733a815fa9a18d16beaApiError,
]:
    """
    Get account WhatsApp templates
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/whatsapp/1/{sender}/contacts/{userNumber}/identity',
    response_model=Ab7498b77a5058e37557279988a806092938b5b30ecbfd39229d94cbcf4bdc07IdentityInfo,
    description="""Get end user's identity info. Feature is not enabled by default.""",
    responses={
        '401': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '403': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '429': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '500': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
    },
    tags=['channels', 'whatsapp', 'whatsapp-identity-management'],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def get_whatsapp_identity(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
    user_number: Annotated[
        str, """End user's number. Must be in international format."""
    ] = Path(..., alias='userNumber'),
) -> Union[
    Ab7498b77a5058e37557279988a806092938b5b30ecbfd39229d94cbcf4bdc07IdentityInfo,
    Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException,
]:
    """
    Get identity
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.put(
    '/whatsapp/1/{sender}/contacts/{userNumber}/identity',
    response_model=None,
    description="""Confirm end user's identity. Feature is not enabled by default.""",
    responses={
        '400': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '401': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '403': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '429': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
        '500': {
            'model': Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
        },
    },
    tags=['channels', 'whatsapp', 'whatsapp-identity-management'],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def confirm_whatsapp_identity(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
    user_number: Annotated[
        str, """End user's number. Must be in international format."""
    ] = Path(..., alias='userNumber'),
    body: Ab7498b77a5058e37557279988a806092938b5b30ecbfd39229d94cbcf4bdc07IdentityConfirmation = ...,
) -> Optional[
    Field790123005ad6e23bd7e4622ede8f0ed5301700e1d8b1837e5f4cdfdda800eaa2ApiException
]:
    """
    Confirm identity
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/whatsapp/2/senders/{sender}/templates',
    response_model=F7a48ff9966e7ac9fef5292e0b74f7ccc796492cacffd985bfded901992c414bTemplatesApiResponse,
    description="""Get all the templates and their statuses for a given sender.""",
    responses={
        '401': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '403': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '404': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '429': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '500': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-template-management',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def get_whatsapp_templates(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
) -> Union[
    F7a48ff9966e7ac9fef5292e0b74f7ccc796492cacffd985bfded901992c414bTemplatesApiResponse,
    Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException,
]:
    """
    Get WhatsApp Templates
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/whatsapp/2/senders/{sender}/templates',
    response_model=None,
    description="""Create a WhatsApp template. Created template will be submitted for WhatsApp's review and approval. Once approved, template can be sent to end-users. Refer to [template guidelines](https://www.infobip.com/docs/whatsapp/message-types#guidelines-amp-best-practices) for additional info.""",
    responses={
        '201': {
            'model': F7a48ff9966e7ac9fef5292e0b74f7ccc796492cacffd985bfded901992c414bTemplateApiResponse
        },
        '400': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '401': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '403': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '404': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '429': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '500': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-template-management',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def create_whatsapp_template(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
    body: F7a48ff9966e7ac9fef5292e0b74f7ccc796492cacffd985bfded901992c414bTemplatePublicApiRequest = ...,
) -> Optional[
    Union[
        F7a48ff9966e7ac9fef5292e0b74f7ccc796492cacffd985bfded901992c414bTemplateApiResponse,
        Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException,
    ]
]:
    """
    Create WhatsApp Template
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/whatsapp/2/senders/{sender}/templates/{id}',
    response_model=F7a48ff9966e7ac9fef5292e0b74f7ccc796492cacffd985bfded901992c414bTemplateApiResponse,
    description="""Get a single template with its status for a given template ID.""",
    responses={
        '400': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '401': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '403': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '404': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '429': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '500': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-template-management',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def get_whatsapp_template(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
    id: Annotated[str, """Template ID. Must be a number."""] = ...,
) -> Union[
    F7a48ff9966e7ac9fef5292e0b74f7ccc796492cacffd985bfded901992c414bTemplateApiResponse,
    Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException,
]:
    """
    Get WhatsApp Template
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.patch(
    '/whatsapp/2/senders/{sender}/templates/{id}',
    response_model=F7a48ff9966e7ac9fef5292e0b74f7ccc796492cacffd985bfded901992c414bTemplateApiResponse,
    description="""Edit a WhatsApp template. Edited template will be submitted for WhatsApp's review and approval. Once approved, template can be sent to end-users. Refer to [template guidelines](https://www.infobip.com/docs/whatsapp/message-types#guidelines-amp-best-practices) for additional info.
* Only templates with an approved, rejected or paused status can be edited.
* Please use structure documented in [Create WhatsApp Template](#channels/whatsapp/whatsapp-service-management/create-whatsapp-template) endpoint.
* Category of an approved template cannot be edited.
* Approved template can be edited up to 10 times in a 30 day window, or 1 time in a 24 hour window. Rejected or paused templates can be edited an unlimited number of times.""",
    responses={
        '400': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '401': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '403': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '404': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '429': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '500': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-template-management',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def edit_whatsapp_template(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
    id: Annotated[str, """Template ID. Must be a number."""] = ...,
    body: F7a48ff9966e7ac9fef5292e0b74f7ccc796492cacffd985bfded901992c414bTemplateEditPublicApiRequest = ...,
) -> Union[
    F7a48ff9966e7ac9fef5292e0b74f7ccc796492cacffd985bfded901992c414bTemplateApiResponse,
    Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException,
]:
    """
    Edit WhatsApp Template
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.delete(
    '/whatsapp/2/senders/{sender}/templates/{templateName}',
    response_model=None,
    description="""Delete a WhatsApp template.
* If registered in multiple languages, deleting the message template will also delete all its languages.
* The template will be deleted for all senders registered under the same WhatsApp Business Account (WABA).
* The system will attempt to deliver sent messages for 30 days, regardless of the template deletion.
* Once deleted, the name of the approved template cannot be reused for 30 days.""",
    responses={
        '400': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '401': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '403': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '404': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '429': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
        '500': {
            'model': Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
        },
    },
    tags=[
        'channels',
        'whatsapp',
        'whatsapp-service-management',
        'whatsapp-template-management',
    ],
    security=[
        APIKeyHeader(name="Authorization"),
        APIKeyHeader(name="Authorization"),
        HTTPBasic(name="None"),
        UnsuportedSecurityStub(name="None"),
    ],
)
def delete_whatsapp_template(
    sender: Annotated[
        str, """Registered WhatsApp sender number. Must be in international format."""
    ],
    template_name: Annotated[
        constr(pattern=r'^[a-z0-9_]{1,512}$'),
        """Template name. Must only contain lowercase alphanumeric characters and underscores.""",
    ] = Path(..., alias='templateName'),
) -> Optional[
    Field8ea2c7a3b5efbaf9015a5275da389c3449f0ab4f7dfbf8f3f925836e68df04d6ApiException
]:
    """
    Delete WhatsApp Template
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Math Server")
    parser.add_argument(
        "transport", choices=["stdio", "sse"], help="Transport mode (stdio or sse)"
    )
    args = parser.parse_args()

    if "SECURITY" in os.environ:
        security_params = BaseSecurity.parse_security_parameters_from_env(
            os.environ,
        )

        app.set_security_params(security_params)

    app._mcp.run(transport=args.transport)
